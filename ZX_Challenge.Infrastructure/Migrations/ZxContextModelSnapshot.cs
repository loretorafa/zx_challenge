// <auto-generated />
using GeoAPI.Geometries;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZX_Challenge.Infrastructure;

namespace ZX_Challenge.Infrastructure.Migrations
{
    [DbContext(typeof(ZxContext))]
    partial class ZxContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ZX_Challenge.Domain.Pdv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<IPoint>("Address")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<IMultiPolygon>("CoverageArea")
                        .IsRequired()
                        .HasColumnType("geometry");

                    b.Property<string>("Document")
                        .IsRequired();

                    b.Property<string>("OwnerName")
                        .IsRequired();

                    b.Property<string>("TradingName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Document")
                        .IsUnique();

                    b.ToTable("PDV","ZX_Challenge");
                });
#pragma warning restore 612, 618
        }
    }
}
